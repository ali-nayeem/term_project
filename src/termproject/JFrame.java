/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JFrame.java
 *
 * Created on Jun 10, 2009, 11:14:47 PM
 */
package termproject;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.*;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Administrator
 */
public class JFrame extends javax.swing.JFrame
{

    Server objServer;
    Client objClient = null, pc = null;
    public String part_of_ip1;
    boolean isIPSelected = false, isAdmin = false, isConnected = false, process = false;
    String SelectedIP = null, ConnectedIP = null;
    showProcess sp = null;
    showDesktop sd = null;
    MyTableModel model = null;
    alert a = null;

    /**
     * Creates new form JFrame
     */
    public JFrame()
    {
        initComponents();
        myCode();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        ip1_formatted_field = new javax.swing.JFormattedTextField();
        ip2_formatted_field = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "IP Range", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 2, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel1.setText("From");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel2.setText("To");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/termproject/resources/upload_download32.png"))); // NOI18N
        jButton1.setText("Scan");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        try {
            ip1_formatted_field.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###   .   ###   .   ###   .   ###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ip1_formatted_field.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ip1_formatted_field.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ip1_formatted_fieldMouseClicked(evt);
            }
        });
        ip1_formatted_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ip1_formatted_fieldActionPerformed(evt);
            }
        });
        ip1_formatted_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ip1_formatted_fieldKeyPressed(evt);
            }
        });

        try {
            ip2_formatted_field.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###   .   ###   .   ###   .   ###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ip2_formatted_field.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ip2_formatted_field.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ip2_formatted_fieldMouseClicked(evt);
            }
        });
        ip2_formatted_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ip2_formatted_fieldActionPerformed(evt);
            }
        });
        ip2_formatted_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ip2_formatted_fieldKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(ip1_formatted_field, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jLabel2)
                .addGap(35, 35, 35)
                .addComponent(ip2_formatted_field, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ip1_formatted_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(ip2_formatted_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Operations", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 2, 12))); // NOI18N

        jButton2.setText("Connect");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Processes");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("O.S.");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Turn Off");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Username");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Disconnect");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("MAC Address");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Show Desktop");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Send Message");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addGap(18, 18, 18)
                .addComponent(jButton8)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(18, 18, 18)
                .addComponent(jButton10)
                .addGap(18, 18, 18)
                .addComponent(jButton9)
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addGap(18, 18, 18)
                .addComponent(jButton7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(166, 225, 236));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Monitoring Screen", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 2, 12))); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Scan Result", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 2, 12))); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "             IP", "           Status"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setResizable(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
        );

        jMenu1.setText("File");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/termproject/resources/exit.png"))); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Mode");

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/termproject/resources/Admin.png"))); // NOI18N
        jMenuItem2.setText("Administrator");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/termproject/resources/user.png"))); // NOI18N
        jMenuItem3.setText("User");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Edit");

        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/termproject/resources/restricted.png"))); // NOI18N
        jMenuItem4.setText("Restricted Processes");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Help");
        jMenu4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu4ActionPerformed(evt);
            }
        });

        jMenuItem5.setText("About");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem5);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        StringTokenizer ip1 = new StringTokenizer(ip1_formatted_field.getText(), ".");
        StringTokenizer ip2 = new StringTokenizer(ip2_formatted_field.getText(), ".");
        int range = 0;
        String tip1 = "", tip2 = "";
        while (ip1.hasMoreTokens())
        {

            tip1 = tip1 + Integer.parseInt(ip1.nextToken().trim());
            tip2 = tip2 + Integer.parseInt(ip2.nextToken().trim());
            if (ip1.countTokens() != 0)
            {
                tip1 = tip1 + ".";
                tip2 = tip2 + ".";
            } else
            {
                range = Integer.parseInt(tip2.substring(tip2.lastIndexOf(".") + 1, tip2.length())) - Integer.parseInt(tip1.substring(tip1.lastIndexOf(".") + 1, tip1.length()));
            }

        }
    //Object o[][]=new Object[range+1][2];
        //new AliveCheck(range,tip1,o);
        if (model != null)
        {
            model.c = false;
        }

        model = new MyTableModel(range, tip1);
        jTable1.setModel(model);
        // System.out.println(range+tip1+tip2);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ip2_formatted_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ip2_formatted_fieldActionPerformed
        // TODO add your handling code here:
        ip2_formatted_field.setText(part_of_ip1);
    }//GEN-LAST:event_ip2_formatted_fieldActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        SelectedIP = (String) (jTable1.getValueAt(jTable1.getSelectedRow(), 0));
        isIPSelected = jTable1.getValueAt(jTable1.getSelectedRow(), 1).equals("ALIVE");
        if (SelectedIP.equals(ConnectedIP) && isConnected)
        {
            jButton2.setText("Connected");
            jButton2.setEnabled(false);
            buttonVisibility(true);
        } else
        {
            jButton2.setText("Connect");
            jButton2.setEnabled(jTable1.getValueAt(jTable1.getSelectedRow(), 1).equals("ALIVE") && isAdmin);
            buttonVisibility(false);
        }
        /*if(jTable1.getValueAt(jTable1.getSelectedRow(),1).equals("ALIVE"))
         {
         isIPSelected=true;
         jButton2.setEnabled(isAdmin && isIPSelected);

         }
         else
         {
         isIPSelected=false;
         jButton2.setEnabled(isAdmin && isIPSelected);
         }
         SelectedIP = (String)(jTable1.getValueAt(jTable1.getSelectedRow(),0));*/
        System.out.println(SelectedIP);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        objServer = new Server();

    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void ip1_formatted_fieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ip1_formatted_fieldKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 39)
        {
            input_handler(ip1_formatted_field);
            ip2_formatted_field.setText(get_part0f_ip1(ip1_formatted_field));

        }
    }//GEN-LAST:event_ip1_formatted_fieldKeyPressed

    private void ip2_formatted_fieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ip2_formatted_fieldMouseClicked
        // TODO add your handling code here:
        ip2_formatted_field.setText(get_part0f_ip1(ip1_formatted_field));
    }//GEN-LAST:event_ip2_formatted_fieldMouseClicked

    private void ip1_formatted_fieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ip1_formatted_fieldMouseClicked
        // TODO add your handling code here:
        // input_handler(ip1_formatted_field);
        // ip2_formatted_field.setText(get_part0f_ip1(ip1_formatted_field));
    }//GEN-LAST:event_ip1_formatted_fieldMouseClicked

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        isAdmin = true;
        jMenuItem2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem2.setForeground(new java.awt.Color(51, 51, 255));
        jMenuItem2.setText("Administrator(enabled)");
        if (model != null)
        {
            jButton2.setEnabled(jTable1.getValueAt(jTable1.getSelectedRow(), 1).equals("ALIVE"));
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (objClient != null)
        {
            if (objClient.nc.isconnected)
            {
                if (sp != null)
                {
                    sp.contd = false;
                }
                if (a != null)
                {
                    a.contd = false;
                }
                objClient.nc.write("dis");
                objClient.nc.closeConnection();
                pc.nc.write("dis");
                pc.nc.closeConnection();

            }
        }
        objClient = new Client(SelectedIP);
        if (objClient.nc.isconnected)
        {
            ConnectedIP = SelectedIP;
            isConnected = true;
            jButton2.setText("Connected");
            jButton2.setEnabled(false);
            buttonVisibility(true);
            pc = new Client(SelectedIP);
            pc.nc.write("process");
            a = new alert(pc.nc);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        //objClient=new Client(SelectedIP);
        // new WriteThreadForClient(objClient.nc,"process");
        if (process == false)
        {
            process = true;
            if (sp != null)
            {
                sp.contd = false;
            }

           //objClient.nc.write("process");
            sp = new showProcess(jTextArea1, pc.nc, a);
        }
        //System.out.println("pro button clicked");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        process = false;
        if (sp != null)
        {
            sp.contd = false;

        }
        objClient.nc.write("os");

        String s = (String) objClient.nc.read();
        jTextArea1.setText(s);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextArea1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea1MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && (jTextArea1.getSelectedText().contains("exe") || jTextArea1.getSelectedText().contains("EXE")))
        {
            // objClient.nc.write("kill#"+jTextArea1.getSelectedText().substring(0,jTextArea1.getSelectedText().lastIndexOf(".")));
            taskKill tk = new taskKill();
            tk.processname = jTextArea1.getSelectedText();
            tk.cb = pc;
            tk.setDefaultCloseOperation(taskKill.HIDE_ON_CLOSE);
            Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
            int x = (int) ((d.getWidth() - getWidth()) / 2);
            int y = (int) ((d.getHeight() - getHeight()) / 2);
            tk.setLocation(x + 190, y + 210);
            tk.mycode();
            tk.setVisible(true);

        }
    }//GEN-LAST:event_jTextArea1MouseClicked

    private void ip2_formatted_fieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ip2_formatted_fieldKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 39)
        {
            input_handler(ip2_formatted_field);
        }
    }//GEN-LAST:event_ip2_formatted_fieldKeyPressed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

        process = false;
        //jTextArea1.setText("");
        turnoff tf = new turnoff();
        //tf.processname=jTextArea1.getSelectedText();
        tf.cb = objClient;
        tf.setTitle("Turn Off");
        tf.setDefaultCloseOperation(turnoff.HIDE_ON_CLOSE);
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((d.getWidth() - getWidth()) / 2);
        int y = (int) ((d.getHeight() - getHeight()) / 2);
        tf.setLocation(x + 190, y + 210);

        tf.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        restriction r = new restriction();
            //tf.processname=jTextArea1.getSelectedText();
        //tf.cb=objClient;
        r.setTitle("Monitor");
        r.setDefaultCloseOperation(turnoff.HIDE_ON_CLOSE);
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((d.getWidth() - getWidth()) / 2);
        int y = (int) ((d.getHeight() - getHeight()) / 2);
        r.setLocation(x + 200, y);
        r.setResizable(false);
        r.setVisible(true);

    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        process = false;
        if (sp != null)
        {
            sp.contd = false;

        }
        objClient.nc.write("un");
        String s = (String) objClient.nc.read();
        jTextArea1.setText(s);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        process = false;
        jTextArea1.setText("");
        // if(objClient!=null)
        //{
        if (sp != null)
        {
            sp.contd = false;
        }
        if (a != null)
        {
            a.contd = false;
        }
        objClient.nc.write("dis");
        objClient.nc.closeConnection();
        pc.nc.write("dis");
        pc.nc.closeConnection();

        //  }
        isConnected = false;
        buttonVisibility(false);
        jButton2.setText("Connect");
        jButton2.setEnabled(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        if (sp != null)
        {
            sp.contd = false;

        }
        process = false;
        jTextArea1.setText(MAC(ConnectedIP));
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        //jTextArea1.setText("");
        // if(sp!=null)
        // sp.contd=false;
        a.contd = false;
        Client c = new Client(ConnectedIP);
        c.nc.write("show");
        sd = new showDesktop(c.nc, this);
}//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        String s = JOptionPane.showInputDialog(this, "Enter your message:");
        if (s != null)
        {
            objClient.nc.write("msg#" + s);
        }

    }//GEN-LAST:event_jButton10ActionPerformed

    private void ip1_formatted_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ip1_formatted_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ip1_formatted_fieldActionPerformed

    private void jMenu4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        about ab = new about();
        ab.setTitle("About");
        ab.setDefaultCloseOperation(turnoff.HIDE_ON_CLOSE);
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((d.getWidth() - getWidth()) / 2);
        int y = (int) ((d.getHeight() - getHeight()) / 2);
        ab.setLocation(x - 30, y);
        ab.setResizable(false);
        ab.setSize(705, 515);
        ab.setVisible(true);


    }//GEN-LAST:event_jMenuItem5ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[])
//    {
//        java.awt.EventQueue.invokeLater(new Runnable()
//        {
//            public void run()
//            {
//                try
//                {
//                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
//                } catch (ClassNotFoundException e)
//                {
//                } catch (InstantiationException e)
//                {
//                } catch (IllegalAccessException e)
//                {
//                } catch (UnsupportedLookAndFeelException e)
//                {
//                }
//                new JFrame().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField ip1_formatted_field;
    private javax.swing.JFormattedTextField ip2_formatted_field;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    @SuppressWarnings("empty-statement")
    private void myCode()
    {
        setTitle("Network Management And Monitoring Software");
        setResizable(false);
        centerScreen();
        ip1_formatted_field.requestFocus();
        jButton2.setEnabled(false);

        jTextArea1.setEditable(false);
        buttonVisibility(false);
        //this.setIconImage(upload_download32.png);
        this.addWindowListener(new WindowAdapter()
        {
            @Override
            public void windowClosing(WindowEvent e)
            {
                if (objClient != null)
                {
                    if (sp != null)
                    {
                        sp.contd = false;
                    }
                    if (objClient.nc.isconnected)
                    {
                        objClient.nc.write("dis");
                        objClient.nc.closeConnection();
                        pc.nc.write("dis");
                        pc.nc.closeConnection();
                    }

                }
                System.exit(0);

            }
        });

    }

    public void input_handler(JFormattedTextField ob)
    {
        StringTokenizer ipTokens = new StringTokenizer(ob.getText(), ".");
        String plainIP1 = "";
        String temp = "";

        while (ipTokens.hasMoreTokens())
        {
            temp = "";
            temp = ipTokens.nextToken().trim();
            if (temp.length() == 1)
            {
                temp = "0" + "0" + temp;
            } else if (temp.length() == 2)
            {
                temp = "0" + temp;
            } else if (temp.length() == 0)
            {
                break;
            }
            plainIP1 += temp;

        }
        ob.setText(plainIP1);
    }

    public String get_part0f_ip1(JFormattedTextField ob)
    {
        String IP = ob.getText();
        StringTokenizer token = new StringTokenizer(IP, ".");
        int field = 0;
        String temp = "";
        while (token.hasMoreTokens())
        {
            field++;
            temp += token.nextToken().trim();
            if (field == 3)
            {
                break;
            }

        }

        return temp.trim();
    }

    private void centerScreen()
    {
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((d.getWidth() - getWidth()) / 2);
        int y = (int) ((d.getHeight() - getHeight()) / 2);
        setLocation(x, y);
    }

    public void buttonVisibility(boolean v)
    {
        jButton3.setEnabled(v);
        jButton4.setEnabled(v);
        jButton5.setEnabled(v);
        jButton6.setEnabled(v);
        jButton7.setEnabled(v);
        jButton8.setEnabled(v);
        jButton9.setEnabled(v);
        jButton10.setEnabled(v);
    }

    public String MAC(String IP)
    {
        Runtime rt = Runtime.getRuntime();
        Process pt = null;
        String z[] = null;
        String s = "";
        boolean c = true;
        if (IP.contains("127"))
        {
            try
            {
                pt = rt.exec("ipconfig /all");
                BufferedReader br = new BufferedReader(new InputStreamReader(pt.getInputStream()));

                while (c)
                {
                    s = br.readLine();
                    if (s.contains("Ethernet adapter Local Area Connection:"))  //bcoz if a ip is ON then the messege shown in cmd promt start with reply from
                    {
                        while (true)
                        {
                            s = br.readLine();
                            if (s.contains("Physical Address"))
                            {
                                z = s.split(":", 2);
                                c = false;
                                break;
                            }
                        }
                    }

                }
            } catch (Exception e)
            {
            }
            return ("MAC ADDRESS:\n\n" + z[1].trim());
        } else

        {
            try
            {
                pt = rt.exec("nbtstat -a " + IP);
                BufferedReader br = new BufferedReader(new InputStreamReader(pt.getInputStream()));

                while (true)
                {
                    s = br.readLine();
                    if (s.contains("MAC Address"))  //bcoz if a ip is ON then the messege shown in cmd promt start with reply from
                    {
                        z = s.split("=", 2);
                        break;
                    }

                }
            } catch (Exception e)
            {
                try
                {
                    pt = rt.exec("ipconfig /all");
                    BufferedReader br = new BufferedReader(new InputStreamReader(pt.getInputStream()));

                    while (c)
                    {
                        s = br.readLine();
                        if (s.contains("Ethernet adapter Local Area Connection:"))  //bcoz if a ip is ON then the messege shown in cmd promt start with reply from
                        {
                            while (true)
                            {
                                s = br.readLine();
                                if (s.contains("Physical Address"))
                                {
                                    z = s.split(":", 2);
                                    c = false;
                                    break;
                                }
                            }
                        }

                    }
                } catch (Exception ex)
                {
                }
            }
            return ("MAC ADDRESS:\n\n" + z[1].trim());
        }
    }
}
